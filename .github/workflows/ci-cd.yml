name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job para verificar vari√°veis de ambiente
  check-environment:
    name: üîç Verificar Vari√°veis de Ambiente
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Check environment variables
      run: |
        cd client
        npm run check-env
      env:
        NODE_ENV: production
        # Vari√°veis de ambiente para teste (n√£o s√£o as reais de produ√ß√£o)
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_WEBSOCKET_URL: ${{ secrets.VITE_WEBSOCKET_URL }}

  # Job para testes e linting
  test-and-lint:
    name: üß™ Testes e Linting
    runs-on: ubuntu-latest
    needs: check-environment
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Type check
      run: |
        cd client
        npm run type-check
        
    - name: Lint code
      run: |
        cd client
        npm run lint

  # Job para build de desenvolvimento
  build-dev:
    name: üèóÔ∏è Build de Desenvolvimento
    runs-on: ubuntu-latest
    needs: [check-environment, test-and-lint]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Build development
      run: |
        cd client
        npm run build:safe
      env:
        NODE_ENV: development
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_WEBSOCKET_URL: ${{ secrets.VITE_WEBSOCKET_URL }}

  # Job para build de produ√ß√£o
  build-prod:
    name: üöÄ Build de Produ√ß√£o
    runs-on: ubuntu-latest
    needs: [check-environment, test-and-lint]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Build production
      run: |
        cd client
        npm run build:render:safe
      env:
        NODE_ENV: production
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_WEBSOCKET_URL: ${{ secrets.VITE_WEBSOCKET_URL }}
        VITE_ENABLE_ANALYTICS: 'true'
        VITE_ENABLE_DEBUG: 'false'
        VITE_ENABLE_SOURCE_MAPS: 'false'
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: client/dist/
        retention-days: 7

  # Job para deploy (opcional - depende da plataforma)
  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    needs: build-prod
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: production-build
        path: client/dist/
        
    - name: Deploy to Netlify (exemplo)
      run: |
        echo "Deploy seria feito aqui"
        echo "Build artifacts dispon√≠veis em client/dist/"
      # Uncomment and configure for actual deployment:
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v3.0
      #   with:
      #     publish-dir: './client/dist'
      #     production-branch: main
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     deploy-message: "Deploy from GitHub Actions"
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
