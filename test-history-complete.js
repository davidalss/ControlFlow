// TESTE COMPLETO DO SISTEMA DE HIST√ìRICO
// Execute este script no console do navegador ap√≥s ir para a p√°gina de produtos

console.log('üß™ TESTE COMPLETO DO SISTEMA DE HIST√ìRICO');

// ========================================
// 1. VERIFICAR SERVI√áO DE HIST√ìRICO
// ========================================

// Verificar se o servi√ßo est√° dispon√≠vel
if (typeof window.productHistoryService !== 'undefined') {
  console.log('‚úÖ Servi√ßo de hist√≥rico dispon√≠vel');
  
  // Testar cria√ß√£o de hist√≥rico
  const testProduct = {
    id: 'test-' + Date.now(),
    code: 'TEST' + Date.now(),
    description: 'Produto de teste',
    category: 'Teste',
    created_at: new Date().toISOString()
  };
  
  try {
    const entry = window.productHistoryService.recordProductCreated(
      testProduct,
      'test-user',
      'Usu√°rio Teste'
    );
    console.log('‚úÖ Hist√≥rico criado:', entry);
  } catch (error) {
    console.log('‚ùå Erro ao criar hist√≥rico:', error);
  }
} else {
  console.log('‚ùå Servi√ßo de hist√≥rico n√£o encontrado');
}

// ========================================
// 2. VERIFICAR LOCALSTORAGE
// ========================================

const historyData = localStorage.getItem('product_history');
if (historyData) {
  const history = JSON.parse(historyData);
  console.log('üìä Hist√≥rico no localStorage:', {
    total: history.length,
    actions: history.map(h => h.action),
    products: [...new Set(history.map(h => h.productCode))]
  });
} else {
  console.log('üì≠ Nenhum hist√≥rico no localStorage');
}

// ========================================
// 3. VERIFICAR BOT√ïES DE HIST√ìRICO
// ========================================

const historyButtons = document.querySelectorAll('button[title*="hist√≥rico"], button[title*="history"]');
console.log('üîò Bot√µes de hist√≥rico encontrados:', historyButtons.length);

if (historyButtons.length > 0) {
  console.log('‚úÖ Bot√µes de hist√≥rico est√£o presentes');
  
  // Simular clique no primeiro bot√£o
  console.log('üñ±Ô∏è Simulando clique no primeiro bot√£o de hist√≥rico...');
  historyButtons[0].click();
  
  // Aguardar modal abrir
  setTimeout(() => {
    const modal = document.querySelector('[class*="modal"], [class*="dialog"]');
    if (modal) {
      console.log('‚úÖ Modal de hist√≥rico aberto');
    } else {
      console.log('‚ùå Modal n√£o encontrado ap√≥s clique');
    }
  }, 1000);
} else {
  console.log('‚ùå Nenhum bot√£o de hist√≥rico encontrado');
}

// ========================================
// 4. VERIFICAR COMPONENTES REACT
// ========================================

// Verificar se h√° componentes de produto
const productRows = document.querySelectorAll('tr, [class*="product"], [data-testid*="product"]');
console.log('üì¶ Linhas/componentes de produto encontrados:', productRows.length);

// ========================================
// 5. TESTAR CRIA√á√ÉO DE PRODUTO
// ========================================

console.log('üìù Para testar cria√ß√£o de produto:');
console.log('1. Clique no bot√£o "Novo Produto"');
console.log('2. Preencha os campos');
console.log('3. Salve o produto');
console.log('4. Verifique se o hist√≥rico foi registrado');

// ========================================
// 6. FUN√á√ïES DE DEBUG
// ========================================

// Fun√ß√£o para mostrar hist√≥rico detalhado
window.showDetailedHistory = function() {
  const history = localStorage.getItem('product_history');
  if (history) {
    const data = JSON.parse(history);
    console.table(data.map(h => ({
      produto: h.productCode,
      acao: h.action,
      usuario: h.userName,
      data: new Date(h.timestamp).toLocaleString(),
      descricao: h.description
    })));
  } else {
    console.log('üì≠ Nenhum hist√≥rico encontrado');
  }
};

// Fun√ß√£o para testar modal
window.testHistoryModal = function() {
  const buttons = document.querySelectorAll('button[title*="hist√≥rico"], button[title*="history"]');
  if (buttons.length > 0) {
    buttons[0].click();
    console.log('üñ±Ô∏è Clique simulado no bot√£o de hist√≥rico');
  } else {
    console.log('‚ùå Nenhum bot√£o de hist√≥rico encontrado');
  }
};

// Fun√ß√£o para limpar hist√≥rico
window.clearHistory = function() {
  localStorage.removeItem('product_history');
  console.log('üóëÔ∏è Hist√≥rico limpo');
};

// ========================================
// 7. INSTRU√á√ïES FINAIS
// ========================================

console.log('\nüìã INSTRU√á√ïES PARA TESTE MANUAL:');
console.log('1. V√° para a p√°gina de produtos');
console.log('2. Clique no √≠cone de hist√≥rico (üìú) em qualquer produto');
console.log('3. Verifique se o modal abre com dados');
console.log('4. Teste os filtros e busca no modal');
console.log('5. Crie, edite ou exclua um produto');
console.log('6. Verifique se o hist√≥rico √© registrado');

console.log('\nüõ†Ô∏è FUN√á√ïES DE DEBUG:');
console.log('- showDetailedHistory(): Mostrar hist√≥rico detalhado');
console.log('- testHistoryModal(): Testar modal de hist√≥rico');
console.log('- clearHistory(): Limpar hist√≥rico');

console.log('\n‚úÖ TESTE INICIADO!');
