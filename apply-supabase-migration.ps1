# Script para aplicar migra√ß√£o no Supabase
# Execute este script para configurar o banco com todas as funcionalidades

Write-Host "üöÄ Configurando banco Supabase para Flow Builder e Smart Inspection..." -ForegroundColor Green

# Verificar se o arquivo de migra√ß√£o existe
$migrationFile = "migrations/0011_flow_builder_and_smart_inspection_fixed.sql"
if (-not (Test-Path $migrationFile)) {
    Write-Host "‚ùå Arquivo de migra√ß√£o n√£o encontrado: $migrationFile" -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ Arquivo de migra√ß√£o encontrado: $migrationFile" -ForegroundColor Yellow

# Verificar se as vari√°veis de ambiente est√£o configuradas
$envFile = ".env.local"
if (Test-Path $envFile) {
    Write-Host "‚úÖ Arquivo .env.local encontrado" -ForegroundColor Green
    Get-Content $envFile | ForEach-Object {
        if ($_ -match "^SUPABASE_URL=") {
            $supabaseUrl = $_.Split("=")[1]
            Write-Host "üîó Supabase URL: $supabaseUrl" -ForegroundColor Cyan
        }
        if ($_ -match "^SUPABASE_ANON_KEY=") {
            $supabaseKey = $_.Split("=")[1]
            Write-Host "üîë Supabase Key: [OCULTA]" -ForegroundColor Cyan
        }
    }
} else {
    Write-Host "‚ö†Ô∏è  Arquivo .env.local n√£o encontrado" -ForegroundColor Yellow
    Write-Host "üìù Crie um arquivo .env.local com as seguintes vari√°veis:" -ForegroundColor White
    Write-Host "   SUPABASE_URL=sua_url_do_supabase" -ForegroundColor Gray
    Write-Host "   SUPABASE_ANON_KEY=sua_chave_anonima" -ForegroundColor Gray
    Write-Host "   SUPABASE_SERVICE_ROLE_KEY=sua_chave_service_role" -ForegroundColor Gray
}

Write-Host ""
Write-Host "üìã INSTRU√á√ïES PARA APLICAR A MIGRA√á√ÉO:" -ForegroundColor Yellow
Write-Host ""
Write-Host "1Ô∏è‚É£  Acesse o Dashboard do Supabase:" -ForegroundColor White
Write-Host "   https://app.supabase.com" -ForegroundColor Cyan
Write-Host ""
Write-Host "2Ô∏è‚É£  Selecione seu projeto" -ForegroundColor White
Write-Host ""
Write-Host "3Ô∏è‚É£  V√° para SQL Editor (√≠cone de c√≥digo)" -ForegroundColor White
Write-Host ""
Write-Host "4Ô∏è‚É£  Copie o conte√∫do do arquivo:" -ForegroundColor White
Write-Host "   $migrationFile" -ForegroundColor Cyan
Write-Host ""
Write-Host "5Ô∏è‚É£  Cole no SQL Editor e execute" -ForegroundColor White
Write-Host ""
Write-Host "6Ô∏è‚É£  Verifique se todas as tabelas foram criadas" -ForegroundColor White
Write-Host ""

# Mostrar resumo das tabelas que ser√£o criadas
Write-Host "üìä TABELAS QUE SER√ÉO CRIADAS:" -ForegroundColor Yellow
Write-Host ""
Write-Host "üîß FLOW BUILDER:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ flow_nodes - N√≥s do fluxo de inspe√ß√£o" -ForegroundColor White
Write-Host "   ‚Ä¢ flow_connections - Conex√µes entre n√≥s" -ForegroundColor White
Write-Host "   ‚Ä¢ flow_plans - Planos de fluxo completos" -ForegroundColor White
Write-Host ""
Write-Host "üìö BIBLIOTECA DE CRIT√âRIOS:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ criteria_blocks - Blocos reutiliz√°veis" -ForegroundColor White
Write-Host "   ‚Ä¢ criteria_categories - Categorias de crit√©rios" -ForegroundColor White
Write-Host ""
Write-Host "ü§ñ EXECU√á√ÉO INTELIGENTE:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ smart_inspections - Execu√ß√µes inteligentes" -ForegroundColor White
Write-Host "   ‚Ä¢ inspection_execution_history - Hist√≥rico de execu√ß√£o" -ForegroundColor White
Write-Host ""
Write-Host "‚ö†Ô∏è  NOTIFICA√á√ïES NC:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ nc_notifications - Notifica√ß√µes de n√£o conformidade" -ForegroundColor White
Write-Host "   ‚Ä¢ nc_details - Detalhes das NCs" -ForegroundColor White
Write-Host ""
Write-Host "üõ°Ô∏è  SISTEMAS CR√çTICOS:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ system_health_logs - Monitoramento de sa√∫de" -ForegroundColor White
Write-Host "   ‚Ä¢ security_events - Eventos de seguran√ßa" -ForegroundColor White
Write-Host "   ‚Ä¢ cache_stats - Estat√≠sticas de cache" -ForegroundColor White
Write-Host "   ‚Ä¢ backup_info - Informa√ß√µes de backup" -ForegroundColor White

Write-Host ""
Write-Host "‚úÖ DADOS INICIAIS INCLU√çDOS:" -ForegroundColor Green
Write-Host "   ‚Ä¢ 6 categorias padr√£o de crit√©rios" -ForegroundColor White
Write-Host "   ‚Ä¢ 5 crit√©rios padr√£o reutiliz√°veis" -ForegroundColor White
Write-Host "   ‚Ä¢ Pol√≠ticas RLS configuradas" -ForegroundColor White
Write-Host "   ‚Ä¢ √çndices para performance" -ForegroundColor White

Write-Host ""
Write-Host "üîí SEGURAN√áA:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Row Level Security (RLS) habilitado" -ForegroundColor White
Write-Host "   ‚Ä¢ Pol√≠ticas de acesso configuradas" -ForegroundColor White
Write-Host "   ‚Ä¢ Triggers para auditoria" -ForegroundColor White

Write-Host ""
Write-Host "üöÄ PR√ìXIMOS PASSOS:" -ForegroundColor Yellow
Write-Host "1. Execute a migra√ß√£o no Supabase" -ForegroundColor White
Write-Host "2. Teste as funcionalidades localmente" -ForegroundColor White
Write-Host "3. Fa√ßa deploy para produ√ß√£o" -ForegroundColor White

Write-Host ""
Write-Host "üí° DICA: Use o comando 'Get-Content $migrationFile' para ver o conte√∫do da migra√ß√£o" -ForegroundColor Cyan
Write-Host ""

# Perguntar se quer ver o conte√∫do da migra√ß√£o
$showMigration = Read-Host "Deseja ver o conte√∫do da migra√ß√£o? (s/n)"
if ($showMigration -eq "s" -or $showMigration -eq "S") {
    Write-Host ""
    Write-Host "üìÑ CONTE√öDO DA MIGRA√á√ÉO:" -ForegroundColor Yellow
    Write-Host "=" * 80 -ForegroundColor Gray
    Get-Content $migrationFile | ForEach-Object {
        Write-Host $_ -ForegroundColor White
    }
    Write-Host "=" * 80 -ForegroundColor Gray
}

Write-Host ""
Write-Host "üéØ Migra√ß√£o pronta para ser aplicada no Supabase!" -ForegroundColor Green
Write-Host "Execute o script SQL no dashboard do Supabase para configurar o banco." -ForegroundColor White
