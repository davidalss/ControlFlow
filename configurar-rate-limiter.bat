@echo off
echo ========================================
echo CONFIGURAR RATE LIMITER - GEMINI API
echo ========================================
echo.

echo [1/5] Verificando arquivo .env...
if exist .env (
    echo ‚úÖ Arquivo .env encontrado
) else (
    echo ‚ùå Arquivo .env n√£o encontrado
    echo Copiando env.example para .env...
    copy env.example .env
)

echo.
echo [2/5] Atualizando chave da API...
echo GEMINI_API_KEY="AIzaSyC3fcnb_xcF54I-pC4u3mxlN8kznT7nY9Q" > .env.temp
echo. >> .env.temp
echo # Outras configura√ß√µes do .env >> .env.temp
if exist .env (
    for /f "tokens=1,* delims==" %%a in (.env) do (
        if not "%%a"=="GEMINI_API_KEY" (
            echo %%a=%%b >> .env.temp
        )
    )
)
move .env.temp .env
echo ‚úÖ Nova chave configurada no .env

echo.
echo [3/5] Verificando configura√ß√£o...
findstr GEMINI .env
if %errorlevel% equ 0 (
    echo ‚úÖ Chave configurada corretamente
) else (
    echo ‚ùå Erro na configura√ß√£o da chave
)

echo.
echo [4/5] Parando servidor atual...
taskkill /f /im node.exe 2>nul
timeout /t 3 /nobreak >nul

echo.
echo [5/5] Iniciando servidor com rate limiter...
start "ControlFlow Server" cmd /k "npm run dev"

echo.
echo ========================================
echo CONFIGURACAO CONCLUIDA
echo ========================================
echo.
echo ‚úÖ Nova chave configurada: AIzaSyC3fcnb_xcF54I-pC4u3mxlN8kznT7nY9Q
echo ‚úÖ Rate limiter implementado (2 req/min)
echo ‚úÖ Servidor reiniciado
echo.
echo üìù MELHORIAS IMPLEMENTADAS:
echo ‚Ä¢ Rate limiter global (2 requisi√ß√µes/minuto)
echo ‚Ä¢ Aguardamento autom√°tico quando limite atingido
echo ‚Ä¢ Cache melhorado para reduzir chamadas √† API
echo ‚Ä¢ Tratamento inteligente de erros 429
echo.
echo üß™ TESTE O RATE LIMITER:
echo Execute: node testar-rate-limiter.cjs
echo.
echo Acesse: http://localhost:5001
echo.
pause
