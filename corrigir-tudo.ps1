Write-Host "========================================" -ForegroundColor Cyan
Write-Host "    CORRIGINDO TUDO - CONTROLFLOW" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar Docker
Write-Host "üîç Verificando Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version 2>$null
    if ($dockerVersion) {
        Write-Host "‚úÖ Docker: $dockerVersion" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Docker n√£o est√° funcionando" -ForegroundColor Red
        Write-Host "   Por favor, inicie o Docker Desktop primeiro" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå Erro ao verificar Docker: $_" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üõë Parando todos os containers..." -ForegroundColor Yellow
docker-compose -f docker-compose.simple.yml down 2>$null
docker-compose -f docker-compose.test.yml down 2>$null
docker stop $(docker ps -q) 2>$null

Write-Host "üßπ Limpando containers √≥rf√£os..." -ForegroundColor Yellow
docker container prune -f 2>$null
docker system prune -f 2>$null

Write-Host ""
Write-Host "üîß Reconstruindo frontend com todas as corre√ß√µes..." -ForegroundColor Yellow
docker-compose -f docker-compose.test.yml up --build -d frontend

Write-Host ""
Write-Host "‚è≥ Aguardando inicializa√ß√£o (45 segundos)..." -ForegroundColor Gray
Start-Sleep -Seconds 45

Write-Host ""
Write-Host "üìä Status dos containers:" -ForegroundColor Cyan
$status = docker-compose -f docker-compose.test.yml ps
Write-Host $status -ForegroundColor Gray

Write-Host ""
Write-Host "üìã Logs do frontend (√∫ltimas 20 linhas):" -ForegroundColor Cyan
$logs = docker-compose -f docker-compose.test.yml logs frontend --tail=20
Write-Host $logs -ForegroundColor Gray

Write-Host ""
Write-Host "üåê Testando conectividade..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 10 -ErrorAction Stop
    Write-Host "‚úÖ Frontend est√° respondendo (Status: $($response.StatusCode))" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Frontend n√£o est√° respondendo: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Write-Host "‚úÖ Processo de corre√ß√£o conclu√≠do!" -ForegroundColor Green
Write-Host "üåê Acesse: http://localhost:3000" -ForegroundColor Green
Write-Host ""
Write-Host "Se ainda houver problemas, verifique:" -ForegroundColor Yellow
Write-Host "1. Docker Desktop est√° rodando" -ForegroundColor Gray
Write-Host "2. Porta 3000 n√£o est√° sendo usada por outro processo" -ForegroundColor Gray
Write-Host "3. Firewall n√£o est√° bloqueando a conex√£o" -ForegroundColor Gray
Write-Host ""
